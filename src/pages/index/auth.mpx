<template>
  <view class="page-container">
    <view class="spinner">
      <view class="spinner-container container1">
        <view class="circle1"></view>
        <view class="circle2"></view>
        <view class="circle3"></view>
        <view class="circle4"></view>
      </view>
      <view class="spinner-container container2">
        <view class="circle1"></view>
        <view class="circle2"></view>
        <view class="circle3"></view>
        <view class="circle4"></view>
      </view>
      <view class="spinner-container container3">
        <view class="circle1"></view>
        <view class="circle2"></view>
        <view class="circle3"></view>
        <view class="circle4"></view>
      </view>
    </view>
  </view>
</template>

<script>
import { createPage } from '@mpxjs/core';
import store from '../../store/index';

createPage({
  data: {},
  onLoad(options) {
    console.log('---auth---', options);
    let { fromPath, requireLogin, scene } = options;
    let path = fromPath ? decodeURIComponent(fromPath) : '/pages/index/index';

    if (requireLogin == 0) {
      wx.reLaunch({ url: path });
    } else {
      // 存在scene，表示是扫渠道商分享码进来的，直接进入vip购买页
      if (scene) {
        path = `/packageVip/pages/vip/index?from=渠道商&scene=${scene}`;
      }
      this.doAutoBkdxLogin(path);
    }
  },
  methods: {
    async doAutoBkdxLogin(sharePath) {
      try {
        let session3rd = wx.getStorageSync('session3rd');
        let dev = wx.getStorageSync('dev');

        if (session3rd) {
          let res = await this.$http.checkSessionID({ session3rd: session3rd });
          console.log('---APP checkSession3rd---', res);
          if (res.code !== '200') {
            wx.login({
              success: (res) => {
                var code = res.code;
                if (code) {
                  // --------- 发送凭证，获取新的 session3rd ------------------
                  this.$http.getAPPSessionID({ code }).then((res) => {
                    console.log('----发送凭证 res---', res);
                    if (res.code === '200') {
                      let session3rd = res.extraData.session3rd;
                      try {
                        // 更新本地 session3rd
                        wx.setStorageSync('session3rd', session3rd);
                        let post_data = {
                          session3rd: session3rd,
                          is_auto: 1,
                          dev: dev,
                        };
                        this.$http.doBkdxLogin(post_data).then((result) => {
                          console.log('---静默登录 res----', result);
                          if (result.code == 200) {
                            this.$sensors.login(result.extraData.uid);
                            if (result.extraData.sc_is_register) {
                              this.$sensors.track('Registration_results', {
                                is_success: result.extraData.sc_is_success,
                                register_method:
                                  result.extraData.sc_register_method,
                                registratio_source: '小程序',
                                reasons_for_failure:
                                  result.extraData.sc_reasons_for_failure,
                              });
                            }
                          }
                          this.$sensors.track('Login_results', {
                            is_success: result.code == 200 ? true : false,
                            login_method: '微信手机号快捷登录',
                            reasons_for_failure:
                              result.code != 200 ? result.message : '',
                          });
                          store.dispatch('getUserAccountInfo'); //拉取用户账户信息
                          wx.reLaunch({ url: sharePath });
                        });
                      } catch (e) {}
                    } else {
                    }
                  });
                } else {
                  console.log('获取用户登录态失败：' + res.errMsg);
                }
              },
            });
          } else {
            console.log('---sharePath---', sharePath);
            wx.reLaunch({ url: sharePath });
            store.dispatch('getUserAccountInfo'); //拉取用户账户信息
          }
        } else {
          // session3rd 不存在，表示之前没授权登录过，直接跳转到登录页面
          wx.reLaunch({
            url: `/pages/index/login?from=中间页&fromPath=${encodeURIComponent(
              sharePath
            )}`,
          });
        }
      } catch (error) {}
    },
  },
});
</script>

<script name="json">
module.exports = {
  navigationBarTitleText: '跳转中',
};
</script>

<style lang="scss">
@import '../../assets/scss/index';
.page-container {
  // loading容器
  .spinner {
    // 修改这里来控制loading位置
    margin: 350rpx auto;
    // loading整体大小
    width: 100rpx;
    height: 100rpx;
    position: relative;
    z-index: 3;
  }

  .container1 > view,
  .container2 > view,
  .container3 > view {
    // loading每个小球大小
    width: 20rpx;
    height: 20rpx;
    // 颜色
    background-color: #5ba8ff;

    border-radius: 100%;
    position: absolute;
    -webkit-animation: bouncedelay 1.2s infinite ease-in-out;
    animation: bouncedelay 1.2s infinite ease-in-out;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
  }

  .spinner .spinner-container {
    position: absolute;
    width: 100%;
    height: 100%;
  }

  .container2 {
    -webkit-transform: rotateZ(45deg);
    transform: rotateZ(45deg);
  }

  .container3 {
    -webkit-transform: rotateZ(90deg);
    transform: rotateZ(90deg);
  }

  .circle1 {
    top: 0;
    left: 0;
  }
  .circle2 {
    top: 0;
    right: 0;
  }
  .circle3 {
    right: 0;
    bottom: 0;
  }
  .circle4 {
    left: 0;
    bottom: 0;
  }

  .container2 .circle1 {
    -webkit-animation-delay: -1.1s;
    animation-delay: -1.1s;
  }

  .container3 .circle1 {
    -webkit-animation-delay: -1s;
    animation-delay: -1s;
  }

  .container1 .circle2 {
    -webkit-animation-delay: -0.9s;
    animation-delay: -0.9s;
  }

  .container2 .circle2 {
    -webkit-animation-delay: -0.8s;
    animation-delay: -0.8s;
  }

  .container3 .circle2 {
    -webkit-animation-delay: -0.7s;
    animation-delay: -0.7s;
  }

  .container1 .circle3 {
    -webkit-animation-delay: -0.6s;
    animation-delay: -0.6s;
  }

  .container2 .circle3 {
    -webkit-animation-delay: -0.5s;
    animation-delay: -0.5s;
  }

  .container3 .circle3 {
    -webkit-animation-delay: -0.4s;
    animation-delay: -0.4s;
  }

  .container1 .circle4 {
    -webkit-animation-delay: -0.3s;
    animation-delay: -0.3s;
  }

  .container2 .circle4 {
    -webkit-animation-delay: -0.2s;
    animation-delay: -0.2s;
  }

  .container3 .circle4 {
    -webkit-animation-delay: -0.1s;
    animation-delay: -0.1s;
  }

  // 动画函数
  @-webkit-keyframes bouncedelay {
    0%,
    80%,
    100% {
      -webkit-transform: scale(0);
    }
    40% {
      -webkit-transform: scale(1);
    }
  }
  // 动画函数
  @keyframes bouncedelay {
    0%,
    80%,
    100% {
      transform: scale(0);
      -webkit-transform: scale(0);
    }
    40% {
      transform: scale(1);
      -webkit-transform: scale(1);
    }
  }
}
</style>
